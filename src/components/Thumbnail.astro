---
import { Image } from 'astro:assets';
import Date from '../components/Date.astro';
import Location from '../components/Location.astro';
import { Debug } from 'astro:components';

const { font, index } = Astro.props;
---
<div class="thumbnail" data-index={index}>
  <div class="thumbnail-image" >
    <Image src={font.data.image.file} alt={font.data.image.alt} />
  </div>
  <div class="thumbnail-metadata">
    <Date date={font.data.pubDate} />
    <Location node={font.data.node} place={font.data.image.alt + ", " + font.data.place} />
  </div>
</div>

<script>
  // All the process and calculations needed to generate thumbnail which
  // take into account the widht/height ratio of images.
  document.addEventListener('DOMContentLoaded', function () {
    const images = document.querySelectorAll('.thumbnail-image img');
    images.forEach(image => {

      if (image.complete) {
        cropAndPositionImage(image);
      } else {
        image.addEventListener('load', () => {
          cropAndPositionImage(image);
        });
      }
    });
  });

  function cropAndPositionImage(img) {
    const imgRatio = img.width / img.height;

    // Get the ratio value declared in the :root CSS section 
    const ratio = getComputedStyle(document.documentElement).getPropertyValue('--aspect-ratio');
    let ratioNum = Number(ratio);

    if (imgRatio < ratioNum) {
        img.style.width = '100%';
        img.style.height = 'auto';
    } else {
        img.style.width = 'auto';
        img.style.height = '100%';
    }
  };
</script>

<style>
  .thumbnail,
  .thumbnail-image {
    position: relative;
  }

  .thumbnail {
    cursor: pointer;
    padding: 1rem;
    transition: 0.2s;
    height: 100%; /* ensure to have the same height for all thumbnails */
  }

  .thumbnail:hover {
    background-color: var(--active-background-color);
  }

  .thumbnail .thumbnail-image {
    aspect-ratio: var(--aspect-ratio);
    display: block;
    width: 100%;
    overflow: hidden;
    text-decoration: none;
    position: relative;
  }
  
  .thumbnail .thumbnail-image img {
    display: block;
    position: absolute;
    pointer-events: none;
    top: 50%;
    left: 50%;
    height: auto;
    transform: translate(-50%,-50%);
  }

  .thumbnail.active {
    /* border: 2px solid rgba(245, 222, 179); */
    background-color: var(--active-background-color);
  }

  .metadata {
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    height: 1.5em;
    padding-top: 0.25em;
  }
</style>

