---
import { Image } from 'astro:assets';
import Date from '../components/Date.astro';
import Location from '../components/Location.astro';

const { font, index } = Astro.props;
---

<div class="detail" data-index={index}>
  <div class="detail-left">
    DETAIL VIEW LEFT
    <!-- <img id="detail-img" src="{image}" alt="{alt}" data-index="{index}" /> -->
  </div>
  <div class="detail-right">
    DETAIL VIEW RIGHT
    <button class="close-button" type="button" aria-label="Close" >
      <svg class="close-svg" width="20px" height="20px">
        <use xlink:href="#close" />
      </svg>
    </button>
    <!-- <div class="info">
      <span id="detail-title">"{name}"</span>
      <span id="detail-pub-date">"{name}"</span>
    </div> -->
    <div class="buttons">
      <button class="previous-button" type="button" aria-label="Previous" data-index={index} disabled>
        <svg class="arrow-svg" width="20px" height="20px">
          <use xlink:href="#left" />
        </svg>
      </button>
      <button class="next-button" type="button" aria-label="Next" data-index={index}>
        <svg class="arrow-svg" width="20px" height="20px">
          <use xlink:href="#right" />
        </svg>
      </button>
    </div>
  </div>
</div>

<style>
  .detail {
    display: flex;
  	flex-direction: column;
    grid-column: 1 / -1;
    color: white;
    padding: 2rem;
    background-color: var(--active-background-color);
    /* display: none; */
    position: fixed;
    inset: 0;
    transition: background-color var(--transDur);
    z-index: 1;
  }

  .detail[data-open="false"] {
	  display: none;
  }

  .detail-left {
    margin: auto 0;
  }

  #detail-img {
    display: block;
    margin: auto;
    height: auto;
    width: 100%;
  }

  .detail-right {
    background-color: hsl(var(--hue),10%,15%);
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    justify-content: space-between;
    padding: 1em;
  }

  .info {
    display: flex;
    flex-direction: column;
  }

  .buttons {
    display:flex;
		justify-content: flex-end;
  }

  /* .close-button:focus, */
  /* button:focus {
    outline: transparent;
  } */

  .close-button {
    background: transparent;
    color: hsl(var(--hue),10%,70%);
    align-self: flex-end;
    position: absolute;
    top: 1em;
    right: 1em;
    width: 2rem;
    height: 2rem;
  }

  .close-button:focus,
  .close-button:hover {
    color: hsl(var(--hue),10%,90%);
  }

  button {
    display: block;
    width: 100%;
    height: 100%;
  }

  @supports selector(:focus-visible) {
    .button:focus {
      color: hsl(var(--hue),10%,70%);
    }
    .button:focus-visible,
    .button:hover,
    .button:not(:disabled):hover {
      color: hsl(var(--hue),10%,90%);
    }
  }

  @media (min-width: 768px) {
    .detail {
      flex-direction: row;
      height: 10em;
      margin: 0rem -1rem;
      padding: 1em;
      position: static;
    }

    .detail-left,
    .detail-right {
      flex: 1;
    }
    .detail-left {
      flex: 2;
      margin: 0;
      max-width: 60%;
    }

    .detail-right {
      background-color: transparent;
      padding: 0 0 0 1em;
    }

    .detail-left,
    .detail-img {
      height: 100%;
      width: auto;
    }

    .close-button {
      position: static;
    }
    .img-grid__detail-pane-info {
      display: block;
    }
  }

</style>