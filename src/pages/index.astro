---
import { getCollection } from "astro:content";
import Page from '../layouts/Page.astro';
import Date from '../components/Date.astro';
import Location from '../components/Location.astro';
import { Debug } from 'astro:components';
import { Image } from 'astro:assets';

const allFonts = await getCollection("fonts");

---
<!--
//TODO: Add previous/next buttons
//TODO: Add metadata
 -->

<Page>
  <!-- <h1>The current URL is: {Astro.url}</h1>
  <h1>The current URL pathname is: {Astro.url.pathname}</h1>
  <h1>The current URL origin is: {Astro.url.origin}</h1> -->
	<div class="fonts">
    {
      allFonts.map((font) => (

        // <Debug {font} />

        <div class="font">
          <div class="thumb">
            <div class="image">
              <Image src={font.data.image.file} alt={font.data.image.alt} data-slug={font.slug} />
            </div>
            <div class="metadata">
              <Date date={font.data.pubDate} />
              <Location node={font.data.node} place={font.data.image.alt + ", " + font.data.place} />
            </div>
          </div>
          <div class="overlay" id={'overlay-' + font.slug}>
            <span class="close" data-slug={font.slug} >âœ–</span>
            <Image src={font.data.image.file} alt={font.data.image.alt} />
          </div>
        </div>
      ))
    }
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const images = document.querySelectorAll('.image');

      images.forEach(image => {
        const img = image.querySelector('img');

        if (img.complete) {
          cropAndPositionImage(image, img);
        } else {
          img.addEventListener('load', () => {
            cropAndPositionImage(image, img);
          });
        }
      });
    });

    function cropAndPositionImage(container, img) {
      console.log(container);
      console.log(img);
      const imgRatio = img.width / img.height;
      const containerRatio = container.offsetWidth / container.offsetHeight;

        if (imgRatio > containerRatio) {
            img.style.width = '100%';
            img.style.height = 'auto';
        } else {
            img.style.width = 'auto';
            img.style.height = '100%';
        }
    }

    // Get all labels
    const thumbs = document.querySelectorAll('img[data-slug]');

    // Handle clicks on each label.
    thumbs.forEach((thumb) => {
      thumb.addEventListener('click', () => {

        // Close all overlays
        const items = document.querySelectorAll('div.overlay');
        items.forEach((item) => {
          item.style.display = 'none';
        });

        document.getElementById('overlay-' + thumb.dataset.slug).style.display = 'flex';
      });
    });

    // Get all close button
    const closes = document.querySelectorAll('span[data-slug]');
    // Handle clicks on each button.
    closes.forEach((close) => {
      close.addEventListener('click', () => {
        document.getElementById('overlay-' + close.dataset.slug).style.display = 'none';
      });
    });
  </script>
</Page>
